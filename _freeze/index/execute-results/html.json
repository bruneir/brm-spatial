{
  "hash": "69f92830d01108153c2b3bbd4e14ec7a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Analysing spatial data using R\nsubtitle: Brunei R User Group Meetup ðŸ‡§ðŸ‡³\ndate: '9 March 2023'\nauthor:\n  - name: Haziq Jamil\n    orcid: 0000-0003-3298-1010\n    email: haziq.jamil@ubd.edu.bn\n    url: https://haziqj.ml\n    affiliation: Universiti Brunei Darussalam\n    degrees: PhD\n# website:\n#   repo-url: https://github.com/bruneir/br-spatial\n---\n\n\n\n\n## `https://bruneir.github.io/brm-spatial` {.unlisted}\n\n# Preliminaries\n\nWelcome to the first Brunei R User Group meetup!\n\n::: {layout=\"[ 65, 35 ]\"}\n::: {#first-column}\n<br>\n\n> The RUGS mission is to facilitate the person-to-person exchange of knowledge in small group settings on a global scale. ---R Consortium\n:::\n\n::: {#second-column}\n![](https://bruneir.github.io/bruneiR-Rlogo.jpg)\n\n``` r\nR |> b_unei()\n```\n:::\n:::\n\n<u>About us</u>\n\n-   A group of UBD-ians and R enthusiasts\n-   We want to create a community of R users in Brunei\n-   Champion the Open Source cause\n\nMore events to come this year. Stay tuned!\n\n<!-- This is a hands-on workshop on spatial data analysis using R. We will be using the `bruneimap` package to visualise and analyse spatial data in Brunei Darussalam. -->\n\n::: {.callout-warning title=\"Outcomes\"}\n-   This is a hands-on, live-coding, lecture-style workshop.\n-   Expect to learn...\n    1.  What spatial data is and why it's important.\n    2.  What statistical analysis can be done with spatial data.\n    3.  How to perform spatial analysis using R.\n-   A basic understanding of R is assumed.\n:::\n\n## Getting started with R\n\n-   RStudio overview\n-   Importing data\n-   Installing packages\n\n## Some packages\n\n-   The tidyverse\n-   The [`{bruneimap}`](https://github.com/propertypricebn/bruneimap) package\n\n# Introduction\n\nMotivation...\n\n## Types of GIS data\n\nRoughly speaking, there are 4 types of GIS data.\n\n1.  **Points**\n    -   Having $(X, Y)$ coordinates (latitude, longitude, or projected coordinates, and are \"zero-dimensional\".\n    -   E.g. shopping malls, hospitals, outbreaks, etc.\n2.  **Lines**\n    -   A collection of points that form a path or a boundary. Has length.\n    -   E.g. roads, rivers, pipelines, etc.\n3.  **Polygons**\n    -   A closed area made up of line segments or curves.\n    -   E.g. countries, districts, buildings, etc.\n4.  **Raster**\n    -   Pixelated (or gridded) data where each pixel is associated with a geographical area and some measurement.\n    -   E.g. satellite images, elevation data, etc.\n\nThe first three are usually referred to as *vector data*. GIS data can be stored in various formats such as `.shp` or `.geojson`. The handling of GIS data (at least vector type data) is facilitated by the `{sf}` package [@pebesma2023spatial] which uses the *simple features* standard.\n\n::: callout-note\n*Simple features* refers to a formal standard (ISO 19125-1:2004) that describes how objects in the real world can be represented in computers, with emphasis on the spatial geometry of these objects.\n:::\n\n<!-- ```{r} -->\n\n<!-- ggplot(kpg_sf) + -->\n\n<!--   geom_sf(aes(fill = mukim), col = \"gray50\") + -->\n\n<!--   geom_sf(data = mkm_sf, col = \"black\", lwd = 0.5, fill = NA) + -->\n\n<!--   geom_sf(data = filter(kpg_sf, is.na(mukim)), fill = \"gray70\", col = \"gray70\") + -->\n\n<!--   scale_fill_viridis_d(option = \"turbo\") + -->\n\n<!--   theme(legend.position = \"none\")  -->\n\n<!-- ``` -->\n\n# Brunei population\n\n::: {.callout-tip title=\"What we'll learn\"}\n-   Represent statistical data using colour mapping symbology (choropleth)\n-   Use `ggplot2::geom_label()` or `ggrepel::geom_label_repel()` to add labels to the map\n-   Using a binned colour scale, e.g. `ggplot2::geom_scale_fill_viridis_b()`\n:::\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nbn_pop_sf <- \n  left_join(\n    kpg_sf, \n    bn_census2021, \n    by = join_by(id, kampong, mukim, district\n  ))\n\nkpg_labels_sf <-\n  bn_pop_sf |>\n  arrange(desc(population)) |>\n  slice_head(n = 10)\n\nbn_pop_sf |>\n  # filter(population > 50) |>\n  ggplot() +\n  geom_sf(aes(fill = population), col = NA, alpha = 0.8) +\n  geom_sf(data = kpg_sf, fill = NA, col = \"black\") +\n  ggrepel::geom_label_repel(\n    data = kpg_labels_sf,\n    aes(label = kampong, geometry = geometry),\n    stat = \"sf_coordinates\",\n    inherit.aes = FALSE,\n    box.padding = 1,\n    size = 2,\n    max.overlaps = Inf\n  ) +\n  scale_fill_viridis_b(\n    name = \"Population\",\n    na.value = NA,\n    labels = scales::comma,\n    breaks = c(0, 50, 100, 1000, 5000, 10000, 15000)\n    # limits = c(0, 12000)\n  ) +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){fig-align='center' width=100%}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}